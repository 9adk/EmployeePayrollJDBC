/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
   	testImplementation 'junit:junit:4.13'
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	//testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.0'
   // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	//testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.0'
   	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
	//testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.0.0'
   	

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
    compile 'com.google.code.gson:gson:2.2.+'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.49'
}